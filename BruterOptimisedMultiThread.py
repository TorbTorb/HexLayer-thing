import time
import multiprocessing as mp
from itertools import repeat
def main():
    layers = [["0,1;", [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,2;", [2, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,3;", [3, 3, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,4;", [4, 4, 4, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,5;", [5, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,6;", [6, 6, 6, 6, 6, 6, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,7;", [7, 7, 7, 7, 7, 7, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 11, 12, 13, 14, 15]],
    ["0,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 12, 13, 14, 15]],
    ["0,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 13, 14, 15]],
    ["0,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 14, 15]],
    ["0,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 15]],
    ["0,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15]],
    ["0,F;", [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]],
    ["2,0;", [0, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["3,0;", [0, 0, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["3,1;", [1, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["4,0;", [0, 0, 0, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["4,1;", [1, 1, 0, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["4,2;", [2, 2, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["5,0;", [0, 0, 0, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["5,1;", [1, 1, 0, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["5,2;", [2, 2, 2, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["5,3;", [3, 3, 3, 3, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["6,0;", [0, 0, 0, 0, 0, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["6,1;", [1, 1, 0, 0, 0, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["6,2;", [2, 2, 2, 0, 0, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["6,3;", [3, 3, 3, 3, 0, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["6,4;", [4, 4, 4, 4, 4, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,0;", [0, 0, 0, 0, 0, 0, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,1;", [1, 1, 0, 0, 0, 0, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,2;", [2, 2, 2, 0, 0, 0, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,3;", [3, 3, 3, 3, 0, 0, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,4;", [4, 4, 4, 4, 4, 0, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,5;", [5, 5, 5, 5, 5, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,0;", [0, 0, 0, 0, 0, 0, 0, 0, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,1;", [1, 1, 0, 0, 0, 0, 0, 0, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,2;", [2, 2, 2, 0, 0, 0, 0, 0, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,3;", [3, 3, 3, 3, 0, 0, 0, 0, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,4;", [4, 4, 4, 4, 4, 0, 0, 0, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,5;", [5, 5, 5, 5, 5, 5, 0, 0, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,6;", [6, 6, 6, 6, 6, 6, 6, 0, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["9,0;", [0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["9,1;", [1, 1, 0, 0, 0, 0, 0, 0, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["9,2;", [2, 2, 2, 0, 0, 0, 0, 0, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["9,3;", [3, 3, 3, 3, 0, 0, 0, 0, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["9,4;", [4, 4, 4, 4, 4, 0, 0, 0, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["9,5;", [5, 5, 5, 5, 5, 5, 0, 0, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["9,6;", [6, 6, 6, 6, 6, 6, 6, 0, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["9,7;", [7, 7, 7, 7, 7, 7, 7, 7, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["A,0;", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,1;", [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,2;", [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,3;", [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,4;", [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,5;", [5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,6;", [6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,7;", [7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 10, 11, 12, 13, 14, 15]],
    ["B,0;", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,1;", [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,2;", [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,3;", [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,4;", [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,5;", [5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,6;", [6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,7;", [7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 11, 12, 13, 14, 15]],
    ["B,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 11, 12, 13, 14, 15]],
    ["C,0;", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,1;", [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,2;", [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,3;", [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,4;", [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,5;", [5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,6;", [6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,7;", [7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 12, 13, 14, 15]],
    ["C,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 12, 13, 14, 15]],
    ["C,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 12, 13, 14, 15]],
    ["D,0;", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,1;", [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,2;", [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,3;", [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,4;", [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,5;", [5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,6;", [6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,7;", [7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 13, 14, 15]],
    ["D,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 13, 14, 15]],
    ["D,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 13, 14, 15]],
    ["D,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 13, 14, 15]],
    ["E,0;", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,1;", [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,2;", [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,3;", [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,4;", [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,5;", [5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,6;", [6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,7;", [7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 14, 15]],
    ["E,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 14, 15]],
    ["E,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 14, 15]],
    ["E,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 14, 15]],
    ["E,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 14, 15]],
    ["F,0;", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,1;", [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,2;", [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,3;", [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,4;", [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,5;", [5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,6;", [6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,7;", [7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 15]],
    ["F,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 15]],
    ["F,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 15]],
    ["F,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 15]],
    ["F,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 15]],
    ["F,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 0, 15]],
    ["0,*2;", [2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,*3;", [3, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,*4;", [4, 3, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,*5;", [5, 4, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,*6;", [6, 5, 4, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,*7;", [7, 6, 5, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,*8;", [8, 7, 6, 5, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,*9;", [9, 8, 7, 6, 5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,*A;", [10, 9, 8, 7, 6, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,*B;", [11, 10, 9, 8, 7, 6, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,*C;", [12, 11, 10, 9, 8, 7, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,*D;", [13, 12, 11, 10, 9, 8, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["0,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["2,*1;", [1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["3,*1;", [1, 0, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["3,*2;", [2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["3,*3;", [3, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["4,*1;", [1, 0, 0, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["4,*2;", [2, 1, 0, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["4,*3;", [3, 2, 1, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["4,*4;", [4, 3, 2, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["4,*5;", [5, 4, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["5,*1;", [1, 0, 0, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["5,*2;", [2, 1, 0, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["5,*3;", [3, 2, 1, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["5,*4;", [4, 3, 2, 1, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["5,*5;", [5, 4, 3, 2, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["5,*6;", [6, 5, 4, 3, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["5,*7;", [7, 6, 5, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["6,*1;", [1, 0, 0, 0, 0, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["6,*2;", [2, 1, 0, 0, 0, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["6,*3;", [3, 2, 1, 0, 0, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["6,*4;", [4, 3, 2, 1, 0, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["6,*5;", [5, 4, 3, 2, 1, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["6,*6;", [6, 5, 4, 3, 2, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["6,*7;", [7, 6, 5, 4, 3, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["6,*8;", [8, 7, 6, 5, 4, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["6,*9;", [9, 8, 7, 6, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,*1;", [1, 0, 0, 0, 0, 0, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,*2;", [2, 1, 0, 0, 0, 0, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,*3;", [3, 2, 1, 0, 0, 0, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,*4;", [4, 3, 2, 1, 0, 0, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,*5;", [5, 4, 3, 2, 1, 0, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,*6;", [6, 5, 4, 3, 2, 1, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,*7;", [7, 6, 5, 4, 3, 2, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,*8;", [8, 7, 6, 5, 4, 3, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,*9;", [9, 8, 7, 6, 5, 4, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,*A;", [10, 9, 8, 7, 6, 5, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["7,*B;", [11, 10, 9, 8, 7, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["8,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]],
    ["9,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["9,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["9,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["9,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["9,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["9,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["9,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["9,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 0, 9, 10, 11, 12, 13, 14, 15]],
    ["9,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 9, 10, 11, 12, 13, 14, 15]],
    ["9,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 9, 10, 11, 12, 13, 14, 15]],
    ["9,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 9, 10, 11, 12, 13, 14, 15]],
    ["9,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 9, 10, 11, 12, 13, 14, 15]],
    ["9,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 9, 10, 11, 12, 13, 14, 15]],
    ["9,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 9, 10, 11, 12, 13, 14, 15]],
    ["9,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 9, 10, 11, 12, 13, 14, 15]],
    ["A,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 10, 11, 12, 13, 14, 15]],
    ["A,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 10, 11, 12, 13, 14, 15]],
    ["A,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 11, 12, 13, 14, 15]],
    ["A,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 10, 11, 12, 13, 14, 15]],
    ["A,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 10, 11, 12, 13, 14, 15]],
    ["A,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 10, 11, 12, 13, 14, 15]],
    ["A,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 10, 11, 12, 13, 14, 15]],
    ["A,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 10, 11, 12, 13, 14, 15]],
    ["B,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 11, 12, 13, 14, 15]],
    ["B,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 11, 12, 13, 14, 15]],
    ["B,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 11, 12, 13, 14, 15]],
    ["B,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 11, 12, 13, 14, 15]],
    ["B,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 11, 12, 13, 14, 15]],
    ["B,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 11, 12, 13, 14, 15]],
    ["B,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 11, 12, 13, 14, 15]],
    ["B,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 11, 12, 13, 14, 15]],
    ["C,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 12, 13, 14, 15]],
    ["C,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 12, 13, 14, 15]],
    ["C,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 12, 13, 14, 15]],
    ["C,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15]],
    ["C,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 12, 13, 14, 15]],
    ["C,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 12, 13, 14, 15]],
    ["C,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 12, 13, 14, 15]],
    ["C,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 12, 13, 14, 15]],
    ["D,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 13, 14, 15]],
    ["D,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 13, 14, 15]],
    ["D,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 13, 14, 15]],
    ["D,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 13, 14, 15]],
    ["D,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 13, 14, 15]],
    ["D,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 13, 14, 15]],
    ["D,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 13, 14, 15]],
    ["D,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 13, 14, 15]],
    ["E,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 14, 15]],
    ["E,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 14, 15]],
    ["E,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 14, 15]],
    ["E,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 14, 15]],
    ["E,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 14, 15]],
    ["E,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14, 15]],
    ["E,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 14, 15]],
    ["E,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 14, 15]],
    ["F,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 15]],
    ["F,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 15]],
    ["F,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 15]],
    ["F,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 15]],
    ["F,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 15]],
    ["F,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 15]],
    ["F,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 15]],
    ["F,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 15]],
    ["*1,0;", [0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,1;", [1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,2;", [2, 2, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,3;", [3, 3, 3, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,4;", [4, 4, 4, 4, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,5;", [5, 5, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,6;", [6, 6, 6, 6, 6, 6, 6, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,7;", [7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 11, 12, 13, 14]],
    ["*1,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 12, 13, 14]],
    ["*1,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 13, 14]],
    ["*1,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 14]],
    ["*1,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14]],
    ["*1,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14]],
    ["*2,0;", [0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,1;", [1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,2;", [2, 2, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,3;", [3, 3, 3, 3, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,4;", [4, 4, 4, 4, 4, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,5;", [5, 5, 5, 5, 5, 5, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,6;", [6, 6, 6, 6, 6, 6, 6, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,7;", [7, 7, 7, 7, 7, 7, 7, 7, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 8, 9, 10, 11, 12, 13]],
    ["*2,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 9, 10, 11, 12, 13]],
    ["*2,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 10, 11, 12, 13]],
    ["*2,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 13]],
    ["*2,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 12, 13]],
    ["*2,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 13]],
    ["*3,0;", [0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,1;", [1, 1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,2;", [2, 2, 2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,3;", [3, 3, 3, 3, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,4;", [4, 4, 4, 4, 4, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,5;", [5, 5, 5, 5, 5, 5, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,6;", [6, 6, 6, 6, 6, 6, 6, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,7;", [7, 7, 7, 7, 7, 7, 7, 7, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 7, 8, 9, 10, 11, 12]],
    ["*3,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 8, 9, 10, 11, 12]],
    ["*3,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 9, 10, 11, 12]],
    ["*3,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 10, 11, 12]],
    ["*3,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 12]],
    ["*3,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 12]],
    ["*4,0;", [0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,1;", [1, 1, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,2;", [2, 2, 2, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,3;", [3, 3, 3, 3, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,4;", [4, 4, 4, 4, 4, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,5;", [5, 5, 5, 5, 5, 5, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,6;", [6, 6, 6, 6, 6, 6, 6, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,7;", [7, 7, 7, 7, 7, 7, 7, 7, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 6, 7, 8, 9, 10, 11]],
    ["*4,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 7, 8, 9, 10, 11]],
    ["*4,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 8, 9, 10, 11]],
    ["*4,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 9, 10, 11]],
    ["*4,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 10, 11]],
    ["*4,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 11]],
    ["*5,0;", [0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,1;", [1, 1, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,2;", [2, 2, 2, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,3;", [3, 3, 3, 3, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,4;", [4, 4, 4, 4, 4, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,5;", [5, 5, 5, 5, 5, 5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,6;", [6, 6, 6, 6, 6, 6, 6, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,7;", [7, 7, 7, 7, 7, 7, 7, 7, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 5, 6, 7, 8, 9, 10]],
    ["*5,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 6, 7, 8, 9, 10]],
    ["*5,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 7, 8, 9, 10]],
    ["*5,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 8, 9, 10]],
    ["*5,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 9, 10]],
    ["*5,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 10]],
    ["*6,0;", [0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,1;", [1, 1, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,2;", [2, 2, 2, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,3;", [3, 3, 3, 3, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,4;", [4, 4, 4, 4, 4, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,5;", [5, 5, 5, 5, 5, 5, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,6;", [6, 6, 6, 6, 6, 6, 6, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,7;", [7, 7, 7, 7, 7, 7, 7, 7, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 4, 5, 6, 7, 8, 9]],
    ["*6,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 6, 7, 8, 9]],
    ["*6,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 6, 7, 8, 9]],
    ["*6,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 7, 8, 9]],
    ["*6,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 8, 9]],
    ["*6,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 9]],
    ["*7,0;", [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,1;", [1, 1, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,2;", [2, 2, 2, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,3;", [3, 3, 3, 3, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,4;", [4, 4, 4, 4, 4, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,5;", [5, 5, 5, 5, 5, 5, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,6;", [6, 6, 6, 6, 6, 6, 6, 0, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,7;", [7, 7, 7, 7, 7, 7, 7, 7, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 3, 4, 5, 6, 7, 8]],
    ["*7,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 4, 5, 6, 7, 8]],
    ["*7,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 5, 6, 7, 8]],
    ["*7,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 6, 7, 8]],
    ["*7,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 7, 8]],
    ["*7,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8]],
    ["*8,0;", [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,1;", [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,2;", [2, 2, 2, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,3;", [3, 3, 3, 3, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,4;", [4, 4, 4, 4, 4, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,5;", [5, 5, 5, 5, 5, 5, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,6;", [6, 6, 6, 6, 6, 6, 6, 0, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,7;", [7, 7, 7, 7, 7, 7, 7, 7, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 2, 3, 4, 5, 6, 7]],
    ["*8,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 3, 4, 5, 6, 7]],
    ["*8,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 4, 5, 6, 7]],
    ["*8,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 5, 6, 7]],
    ["*8,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 6, 7]],
    ["*8,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 7]],
    ["*9,0;", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,1;", [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,2;", [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,3;", [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,4;", [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,5;", [5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,6;", [6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,7;", [7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 2, 3, 4, 5, 6]],
    ["*9,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 2, 3, 4, 5, 6]],
    ["*9,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 3, 4, 5, 6]],
    ["*9,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 4, 5, 6]],
    ["*9,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 5, 6]],
    ["*9,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 6]],
    ["*A,0;", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,1;", [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,2;", [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,3;", [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,4;", [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,5;", [5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,6;", [6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,7;", [7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 1, 2, 3, 4, 5]],
    ["*A,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1, 2, 3, 4, 5]],
    ["*A,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 2, 3, 4, 5]],
    ["*A,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 3, 4, 5]],
    ["*A,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 4, 5]],
    ["*A,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 5]],
    ["*B,0;", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,1;", [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,2;", [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,3;", [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,4;", [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,5;", [5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,6;", [6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,7;", [7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 1, 2, 3, 4]],
    ["*B,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 1, 2, 3, 4]],
    ["*B,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1, 2, 3, 4]],
    ["*B,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 2, 3, 4]],
    ["*B,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 3, 4]],
    ["*B,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 4]],
    ["*C,0;", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,1;", [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,2;", [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,3;", [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,4;", [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,5;", [5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,6;", [6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,7;", [7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 1, 2, 3]],
    ["*C,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 1, 2, 3]],
    ["*C,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 1, 2, 3]],
    ["*C,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 2, 3]],
    ["*C,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 2, 3]],
    ["*C,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 3]],
    ["*D,0;", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,1;", [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,2;", [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,3;", [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,4;", [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,5;", [5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,6;", [6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,7;", [7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 1, 2]],
    ["*D,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 1, 2]],
    ["*D,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 1, 2]],
    ["*D,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 1, 2]],
    ["*D,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1, 2]],
    ["*D,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 2]],
    ["*E,0;", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,1;", [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,2;", [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,3;", [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,4;", [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,5;", [5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,6;", [6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,7;", [7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 1]],
    ["*E,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 1]],
    ["*E,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 1]],
    ["*E,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 1]],
    ["*E,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 0, 1]],
    ["*E,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 1]],
    ["*F,0;", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,1;", [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,2;", [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,3;", [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,4;", [4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,5;", [5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,6;", [6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,7;", [7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,8;", [8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,9;", [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0]],
    ["*F,A;", [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0]],
    ["*F,B;", [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0]],
    ["*F,C;", [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 0]],
    ["*F,D;", [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 0, 0]],
    ["*F,E;", [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0]],
    ["*1,*1;", [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,*2;", [2, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,*3;", [3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,*4;", [4, 3, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,*5;", [5, 4, 3, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,*6;", [6, 5, 4, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,*7;", [7, 6, 5, 4, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,*8;", [8, 7, 6, 5, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,*9;", [9, 8, 7, 6, 5, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,*A;", [10, 9, 8, 7, 6, 5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,*B;", [11, 10, 9, 8, 7, 6, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,*C;", [12, 11, 10, 9, 8, 7, 6, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*1,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 8, 9, 10, 11, 12, 13, 14]],
    ["*2,*1;", [1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,*2;", [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,*3;", [3, 2, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,*4;", [4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,*5;", [5, 4, 3, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,*6;", [6, 5, 4, 3, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,*7;", [7, 6, 5, 4, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,*8;", [8, 7, 6, 5, 4, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,*9;", [9, 8, 7, 6, 5, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,*A;", [10, 9, 8, 7, 6, 5, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,*B;", [11, 10, 9, 8, 7, 6, 5, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 7, 8, 9, 10, 11, 12, 13]],
    ["*2,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 7, 8, 9, 10, 11, 12, 13]],
    ["*3,*1;", [1, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,*2;", [2, 1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,*3;", [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,*4;", [4, 3, 2, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,*5;", [5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,*6;", [6, 5, 4, 3, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,*7;", [7, 6, 5, 4, 3, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,*8;", [8, 7, 6, 5, 4, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,*9;", [9, 8, 7, 6, 5, 4, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,*A;", [10, 9, 8, 7, 6, 5, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 6, 7, 8, 9, 10, 11, 12]],
    ["*3,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 7, 8, 9, 10, 11, 12]],
    ["*4,*1;", [1, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,*2;", [2, 1, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,*3;", [3, 2, 1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,*4;", [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,*5;", [5, 4, 3, 2, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,*6;", [6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,*7;", [7, 6, 5, 4, 3, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,*8;", [8, 7, 6, 5, 4, 3, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,*9;", [9, 8, 7, 6, 5, 4, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 6, 7, 8, 9, 10, 11]],
    ["*4,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 6, 7, 8, 9, 10, 11]],
    ["*5,*1;", [1, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,*2;", [2, 1, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,*3;", [3, 2, 1, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,*4;", [4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,*5;", [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,*6;", [6, 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,*7;", [7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,*8;", [8, 7, 6, 5, 4, 3, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 5, 6, 7, 8, 9, 10]],
    ["*5,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 5, 6, 7, 8, 9, 10]],
    ["*5,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 6, 7, 8, 9, 10]],
    ["*6,*1;", [1, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,*2;", [2, 1, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,*3;", [3, 2, 1, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,*4;", [4, 3, 2, 1, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,*5;", [5, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,*6;", [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,*7;", [7, 6, 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 4, 5, 6, 7, 8, 9]],
    ["*6,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 4, 5, 6, 7, 8, 9]],
    ["*6,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 5, 6, 7, 8, 9]],
    ["*6,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 5, 6, 7, 8, 9]],
    ["*7,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 3, 4, 5, 6, 7, 8]],
    ["*7,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 3, 4, 5, 6, 7, 8]],
    ["*7,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 4, 5, 6, 7, 8]],
    ["*7,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 4, 5, 6, 7, 8]],
    ["*7,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 5, 6, 7, 8]],
    ["*8,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7]],
    ["*8,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 3, 4, 5, 6, 7]],
    ["*8,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 3, 4, 5, 6, 7]],
    ["*8,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 3, 4, 5, 6, 7]],
    ["*8,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 4, 5, 6, 7]],
    ["*8,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 4, 5, 6, 7]],
    ["*9,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6]],
    ["*9,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, 6]],
    ["*9,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6]],
    ["*9,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 3, 4, 5, 6]],
    ["*9,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 3, 4, 5, 6]],
    ["*9,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 3, 4, 5, 6]],
    ["*9,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 4, 5, 6]],
    ["*A,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4, 5]],
    ["*A,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5]],
    ["*A,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 2, 3, 4, 5]],
    ["*A,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5]],
    ["*A,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 3, 4, 5]],
    ["*A,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 3, 4, 5]],
    ["*A,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 3, 4, 5]],
    ["*B,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 1, 2, 3, 4]],
    ["*B,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 2, 3, 4]],
    ["*B,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4]],
    ["*B,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 2, 3, 4]],
    ["*B,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4]],
    ["*B,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 3, 4]],
    ["*B,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 3, 4]],
    ["*C,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 1, 2, 3]],
    ["*C,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 1, 2, 3]],
    ["*C,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 2, 3]],
    ["*C,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3]],
    ["*C,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 2, 3]],
    ["*C,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 3]],
    ["*C,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 3]],
    ["*D,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 1, 2]],
    ["*D,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 1, 2]],
    ["*D,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 1, 2]],
    ["*D,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 1, 2]],
    ["*D,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2]],
    ["*D,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 2]],
    ["*D,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 2]],
    ["*E,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 1]],
    ["*E,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 1]],
    ["*E,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 1]],
    ["*E,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 1]],
    ["*E,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 1]],
    ["*E,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1]],
    ["*E,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1]],
    ["*F,*1;", [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,*2;", [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,*3;", [3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,*4;", [4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,*5;", [5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,*6;", [6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,*7;", [7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,*8;", [8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,*9;", [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0]],
    ["*F,*A;", [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0]],
    ["*F,*B;", [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0]],
    ["*F,*C;", [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0, 0]],
    ["*F,*D;", [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0, 0]],
    ["*F,*E;", [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 0]],
    ["*F,*F;", [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]]]
    
    desired = ((1, 0, 2, 3, 4, 6, 5, 5, 8, 9, 10, 11, 13, 13, 14, 15))#(3, 1, 4, 1, 5, 9, 2 ,6, 5, 3, 5, 8, 9, 7, 9, 3)
    #calc weigths for desired
    weightsdesired = count(desired)
    countdesired = len(weightsdesired)
    #for i in layers:
        #print('{"'+ i[0] + '"}, ', end = "")
        #if layers.index(i)%10 == 0:
        #    print()
        #print('{{"'+ i[0] + '"}, {' + str(i[1]).removeprefix("[").removesuffix("]") + '}},')

    #create initial dict
    #modify layers to remove function that will never work anyways
    copy = layers
    layerdict = {}
    layers = []
    for i in copy:
        if wouldfit(count(desired), count(i[1])):#len(count(i[1])) >= countdesired and 
            layers.append(i)
            layerdict[tuple(i[1])] = i[0]
    #print(len(layers))

    #check if result exists
    found = False
    result = layerdict.get(desired)
    if result is not None:
        print(f"found it :D  {result}")
        found = True
    else:
        print(f"completed layer 1")
        print(f"amount of valid functions: {len(layerdict)}")
    #generate new layer
    #exit()
    layern = 1
    while not found:
        layern += 1
        newdict = {}
        #print(end = "")
        #print(f"\r<{' ' * 50}>", end ="")
        print("Processing...")
        
        with mp.Pool() as pool:
            newdict = pool.starmap(check, zip(layers, repeat(layerdict), repeat(weightsdesired), [i for i in range(len(layers))]))
        layerdict = {}
        print("\nCombining...")
        for d in newdict:
            layerdict.update(d)
        print(f"Completed layer {layern}")

        result = layerdict.get(desired)
        if result is not None:
            print(f"found it :D  {result}")
            found = True
        else:
            print(f"New amount of candidates: {len(layerdict)}")
            input("Press enter to compute next layer")

def count(list):
    tempweights = [0 for _ in range(16)]
    for i in list:
        tempweights[i] += 1
    weights = []
    for  val in tempweights:
        if val:
            weights.append(val)
    return weights

def check(candidate, layerdict, weightsdesired, num):
    newdict = {}
    countdesired = len(weightsdesired)
    for lut, value in layerdict.items():
        newkey = [candidate[1][ss] for ss in lut]
        weightscurrent = count(newkey)
        if countdesired <= len(weightscurrent) and wouldfit(weightsdesired, weightscurrent):
            newdict[tuple(newkey)] = f"{candidate[0]}{value}"
    #print(f"\r{'|' * (num%100)}", end="")
    print(f"\r{num}", end = "")
    return newdict

def wouldfit(desiredin:list, candidatein:list):
    desired = desiredin.copy()
    candidate = candidatein.copy()
    candidate.sort(reverse=True)
    desired.sort(reverse=True)
    while len(candidate):
        diff = desired[0] - candidate[0]
        if diff < 0: return False
        elif diff == 0: del(desired[0])
        else:
            desired[0] = diff
            desired.sort(reverse=True)
        del(candidate[0])
        if candidate == desired: return True


if __name__ == "__main__":
    main()


"""        for key, value in layerdict.items():
            e+=1
            if not e%inc:
                print(f"\r<{'=' * (e//inc) + ' ' * (50-(e//inc))}>", end = "")
            for layer in layers:
                lut = layer[1]
                newkey = [lut[ss] for ss in key]
                weightscurrent = count(newkey)
                if countdesired > len(weightscurrent):
                    continue
                newdict[tuple(newkey)] = f"{value} {layer[0]}
        layerdict = newdict
        result = layerdict.get(desired)"""